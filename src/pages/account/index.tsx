import { api } from "@/utils/api";
import { motion } from "framer-motion";
import { useSession } from "next-auth/react";
import Head from "next/head";
import { toast } from "react-toastify";
import type { NextPageWithLayout } from "../_app";

// external imports
import ErrorScreen from "@/components/screens/ErrorScreen";
import LoadingScreen from "@/components/screens/LoadingScreen";
import Layout from "@/layouts/Layout";
import { XMarkIcon } from "@heroicons/react/20/solid";

const Account: NextPageWithLayout = () => {
  const { status } = useSession();
  const apiUtils = api.useContext();

  // get bios query
  const biosQuery = api.bio.getPaginated.useInfiniteQuery(
    { skip: 0, take: 10 },
    {
      enabled: status === "authenticated",
    }
  );

  // delete bio mutation
  const deleteBioMutation = api.bio.delete.useMutation({
    onMutate: async () => {
      await apiUtils.bio.getPaginated.invalidate();
    },
    onError: (err) => {
      toast.error(err.message);
    },
  });

  // framer motion
  const container = {
    hidden: { opacity: 1 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1,
      },
    },
  };
  const item = {
    hidden: { opacity: 0, y: 20 },
    visible: { opacity: 1, y: 0 },
  };

  if (biosQuery.isLoading) {
    return <LoadingScreen />;
  }

  if (biosQuery.isError) {
    return <ErrorScreen error={biosQuery.error} />;
  }

  return (
    <>
      <Head>
        <title>Account | Bio Generator</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container mx-auto mt-28 mb-14 flex min-h-screen max-w-2xl flex-col gap-10 px-4">
        <h1 className="text-center text-xl font-semibold text-white sm:text-3xl">
          Your saved bios
        </h1>
        <motion.div
          className="grid gap-4"
          variants={container}
          initial="hidden"
          animate="visible"
        >
          {biosQuery.data.pages.map((page) =>
            page.map((bio) => (
              <motion.div
                key={bio.id}
                className="flex cursor-copy items-center justify-between rounded-lg bg-gray-700 p-4 transition-colors hover:bg-gray-800 active:bg-gray-700"
                variants={item}
                onClick={() => {
                  void navigator.clipboard.writeText(bio.bio);
                  toast.success("Copied to clipboard!");
                }}
              >
                <span className="text-white">{bio.bio}</span>
                <button
                  aria-label="delete bio"
                  className="text-gray-300 hover:text-gray-200 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800"
                  onClick={() => deleteBioMutation.mutate(bio.id)}
                >
                  <XMarkIcon className="h-5 w-5" aria-hidden="true" />
                </button>
              </motion.div>
            ))
          )}
        </motion.div>
        <button
          className="w-full rounded-lg bg-gray-700 py-2 px-4 font-semibold text-white hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800 active:bg-gray-700"
          onClick={() => void biosQuery.fetchPreviousPage()}
        >
          Load more
        </button>
      </main>
    </>
  );
};

export default Account;

Account.getLayout = (page) => <Layout>{page}</Layout>;
